// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: back_end.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Interop {

  /// <summary>Holder for reflection information generated from back_end.proto</summary>
  public static partial class BackEndReflection {

    #region Descriptor
    /// <summary>File descriptor for back_end.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BackEndReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5iYWNrX2VuZC5wcm90bxIHaW50ZXJvcBoMc2hhcmVkLnByb3RvIkwKEUFx",
            "dWlyZURhdGFSZXF1ZXN0EhAKCHVzZXJuYW1lGAEgASgJEiUKB2NvbW1hbmQY",
            "AiABKA4yFC5pbnRlcm9wLkNvbW1hbmRUeXBlIlYKFlRyYWluQ2xhc3NpZmll",
            "clJlcXVlc3QSEAoIdXNlcm5hbWUYASABKAkSKgoMY29tbWFuZF9saXN0GAIg",
            "AygOMhQuaW50ZXJvcC5Db21tYW5kVHlwZSIsChhSZWNvZ25pemVDb21tYW5k",
            "c1JlcXVlc3QSEAoIdXNlcm5hbWUYASABKAky8gEKB0JhY2tFbmQSSwoVQWNx",
            "dWlyZURhdGFGb3JDb21tYW5kEhouaW50ZXJvcC5BcXVpcmVEYXRhUmVxdWVz",
            "dBoULmludGVyb3AuU3RhdHVzUmVwbHkiABJKCg9UcmFpbkNsYXNzaWZpZXIS",
            "Hy5pbnRlcm9wLlRyYWluQ2xhc3NpZmllclJlcXVlc3QaFC5pbnRlcm9wLlN0",
            "YXR1c1JlcGx5IgASTgoRUmVjb2duaXplQ29tbWFuZHMSIS5pbnRlcm9wLlJl",
            "Y29nbml6ZUNvbW1hbmRzUmVxdWVzdBoULmludGVyb3AuU3RhdHVzUmVwbHki",
            "AGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Interop.SharedReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Interop.AquireDataRequest), global::Interop.AquireDataRequest.Parser, new[]{ "Username", "Command" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Interop.TrainClassifierRequest), global::Interop.TrainClassifierRequest.Parser, new[]{ "Username", "CommandList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Interop.RecognizeCommandsRequest), global::Interop.RecognizeCommandsRequest.Parser, new[]{ "Username" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AquireDataRequest : pb::IMessage<AquireDataRequest> {
    private static readonly pb::MessageParser<AquireDataRequest> _parser = new pb::MessageParser<AquireDataRequest>(() => new AquireDataRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AquireDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Interop.BackEndReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AquireDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AquireDataRequest(AquireDataRequest other) : this() {
      username_ = other.username_;
      command_ = other.command_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AquireDataRequest Clone() {
      return new AquireDataRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 2;
    private global::Interop.CommandType command_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Interop.CommandType Command {
      get { return command_; }
      set {
        command_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AquireDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AquireDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Command != other.Command) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Command != 0) hash ^= Command.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Command != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Command);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Command != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Command);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AquireDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Command != 0) {
        Command = other.Command;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 16: {
            command_ = (global::Interop.CommandType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TrainClassifierRequest : pb::IMessage<TrainClassifierRequest> {
    private static readonly pb::MessageParser<TrainClassifierRequest> _parser = new pb::MessageParser<TrainClassifierRequest>(() => new TrainClassifierRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrainClassifierRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Interop.BackEndReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainClassifierRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainClassifierRequest(TrainClassifierRequest other) : this() {
      username_ = other.username_;
      commandList_ = other.commandList_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainClassifierRequest Clone() {
      return new TrainClassifierRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "command_list" field.</summary>
    public const int CommandListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Interop.CommandType> _repeated_commandList_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Interop.CommandType) x);
    private readonly pbc::RepeatedField<global::Interop.CommandType> commandList_ = new pbc::RepeatedField<global::Interop.CommandType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Interop.CommandType> CommandList {
      get { return commandList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrainClassifierRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrainClassifierRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if(!commandList_.Equals(other.commandList_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      hash ^= commandList_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      commandList_.WriteTo(output, _repeated_commandList_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      size += commandList_.CalculateSize(_repeated_commandList_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrainClassifierRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      commandList_.Add(other.commandList_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            commandList_.AddEntriesFrom(input, _repeated_commandList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RecognizeCommandsRequest : pb::IMessage<RecognizeCommandsRequest> {
    private static readonly pb::MessageParser<RecognizeCommandsRequest> _parser = new pb::MessageParser<RecognizeCommandsRequest>(() => new RecognizeCommandsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecognizeCommandsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Interop.BackEndReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecognizeCommandsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecognizeCommandsRequest(RecognizeCommandsRequest other) : this() {
      username_ = other.username_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecognizeCommandsRequest Clone() {
      return new RecognizeCommandsRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecognizeCommandsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecognizeCommandsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecognizeCommandsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
