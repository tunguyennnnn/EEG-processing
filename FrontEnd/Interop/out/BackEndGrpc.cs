// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: back_end.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Interop {
  public static class BackEnd
  {
    static readonly string __ServiceName = "interop.BackEnd";

    static readonly Marshaller<global::Interop.AquireDataRequest> __Marshaller_AquireDataRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Interop.AquireDataRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Interop.StatusReply> __Marshaller_StatusReply = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Interop.StatusReply.Parser.ParseFrom);
    static readonly Marshaller<global::Interop.TrainClassifierRequest> __Marshaller_TrainClassifierRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Interop.TrainClassifierRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Interop.RecognizeCommandsRequest> __Marshaller_RecognizeCommandsRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Interop.RecognizeCommandsRequest.Parser.ParseFrom);

    static readonly Method<global::Interop.AquireDataRequest, global::Interop.StatusReply> __Method_AcquireDataForCommand = new Method<global::Interop.AquireDataRequest, global::Interop.StatusReply>(
        MethodType.Unary,
        __ServiceName,
        "AcquireDataForCommand",
        __Marshaller_AquireDataRequest,
        __Marshaller_StatusReply);

    static readonly Method<global::Interop.TrainClassifierRequest, global::Interop.StatusReply> __Method_TrainClassifier = new Method<global::Interop.TrainClassifierRequest, global::Interop.StatusReply>(
        MethodType.Unary,
        __ServiceName,
        "TrainClassifier",
        __Marshaller_TrainClassifierRequest,
        __Marshaller_StatusReply);

    static readonly Method<global::Interop.RecognizeCommandsRequest, global::Interop.StatusReply> __Method_RecognizeCommands = new Method<global::Interop.RecognizeCommandsRequest, global::Interop.StatusReply>(
        MethodType.Unary,
        __ServiceName,
        "RecognizeCommands",
        __Marshaller_RecognizeCommandsRequest,
        __Marshaller_StatusReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Interop.BackEndReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for BackEnd</summary>
    public class BackEndClient : ClientBase<BackEndClient>
    {
      /// <summary>Creates a new client for BackEnd</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public BackEndClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for BackEnd that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public BackEndClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected BackEndClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected BackEndClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Interop.StatusReply AcquireDataForCommand(global::Interop.AquireDataRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AcquireDataForCommand(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Interop.StatusReply AcquireDataForCommand(global::Interop.AquireDataRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AcquireDataForCommand, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Interop.StatusReply> AcquireDataForCommandAsync(global::Interop.AquireDataRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AcquireDataForCommandAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Interop.StatusReply> AcquireDataForCommandAsync(global::Interop.AquireDataRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AcquireDataForCommand, null, options, request);
      }
      public virtual global::Interop.StatusReply TrainClassifier(global::Interop.TrainClassifierRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TrainClassifier(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Interop.StatusReply TrainClassifier(global::Interop.TrainClassifierRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TrainClassifier, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Interop.StatusReply> TrainClassifierAsync(global::Interop.TrainClassifierRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TrainClassifierAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Interop.StatusReply> TrainClassifierAsync(global::Interop.TrainClassifierRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TrainClassifier, null, options, request);
      }
      public virtual global::Interop.StatusReply RecognizeCommands(global::Interop.RecognizeCommandsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RecognizeCommands(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Interop.StatusReply RecognizeCommands(global::Interop.RecognizeCommandsRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RecognizeCommands, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Interop.StatusReply> RecognizeCommandsAsync(global::Interop.RecognizeCommandsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RecognizeCommandsAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Interop.StatusReply> RecognizeCommandsAsync(global::Interop.RecognizeCommandsRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RecognizeCommands, null, options, request);
      }
      protected override BackEndClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BackEndClient(configuration);
      }
    }

  }
}
#endregion
