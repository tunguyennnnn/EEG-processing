// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shared.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Interop {

  /// <summary>Holder for reflection information generated from shared.proto</summary>
  public static partial class SharedReflection {

    #region Descriptor
    /// <summary>File descriptor for shared.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SharedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxzaGFyZWQucHJvdG8SB2ludGVyb3AiGwoLU3RhdHVzUmVwbHkSDAoEY29k",
            "ZRgBIAEoBSqTAQoLQ29tbWFuZFR5cGUSEAoMTU9WRV9GT1JXQVJEEAASDQoJ",
            "TU9WRV9CQUNLEAESDgoKTU9WRV9SSUdIVBACEg0KCU1PVkVfTEVGVBADEgsK",
            "B01PVkVfVVAQBBINCglNT1ZFX0RPV04QBRIOCgpUVVJOX1JJR0hUEAYSDQoJ",
            "VFVSTl9MRUZUEAcSCQoFUkVTRVQQCGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Interop.CommandType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Interop.StatusReply), global::Interop.StatusReply.Parser, new[]{ "Code" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CommandType {
    [pbr::OriginalName("MOVE_FORWARD")] MoveForward = 0,
    [pbr::OriginalName("MOVE_BACK")] MoveBack = 1,
    [pbr::OriginalName("MOVE_RIGHT")] MoveRight = 2,
    [pbr::OriginalName("MOVE_LEFT")] MoveLeft = 3,
    [pbr::OriginalName("MOVE_UP")] MoveUp = 4,
    [pbr::OriginalName("MOVE_DOWN")] MoveDown = 5,
    [pbr::OriginalName("TURN_RIGHT")] TurnRight = 6,
    [pbr::OriginalName("TURN_LEFT")] TurnLeft = 7,
    [pbr::OriginalName("RESET")] Reset = 8,
  }

  #endregion

  #region Messages
  public sealed partial class StatusReply : pb::IMessage<StatusReply> {
    private static readonly pb::MessageParser<StatusReply> _parser = new pb::MessageParser<StatusReply>(() => new StatusReply());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatusReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Interop.SharedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusReply(StatusReply other) : this() {
      code_ = other.code_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusReply Clone() {
      return new StatusReply(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatusReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatusReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatusReply other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
