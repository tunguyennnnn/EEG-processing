syntax = "proto3";

import "shared.proto";

package interop;

service BackEnd {
  rpc AcquireDataForCommand(AquireDataRequest) returns (StatusReply) {}
  rpc ResetDataForCommand(ResetDataRequest)    returns (StatusReply) {}

  rpc TrainClassifier(TrainClassifierRequest) returns (StatusReply) {}

  rpc RecognizeCommands(RecognizeCommandsRequest) returns (StatusReply) {}
  rpc StopRecognizion(EmptyRequest) returns (StatusReply) {}

  rpc CreateUserProfile(UserProfileOperationRequest) returns (StatusReply) {}
  rpc DeleteUserProfile(UserProfileOperationRequest) returns (StatusReply) {}

  rpc GetUserProfile(UserProfileOperationRequest) returns (ProfileDataReply) {}
  rpc GetUserProfiles(EmptyRequest) returns (ProfileListReply) {}

  rpc UpdateSensorData(UpdateSensorDataRequest) returns (StatusReply) {}

  rpc DroneTakeoff(EmptyRequest) returns (StatusReply) {}
  rpc DroneLand(EmptyRequest) returns (StatusReply) {}

  rpc EnableDataStreaming (EmptyRequest) returns (StatusReply) {}
  rpc DisableDataStreaming (EmptyRequest) returns (StatusReply) {}
}

message AquireDataRequest {
	string username = 1;
	CommandType command = 2;
}

message ResetDataRequest {
	string username = 1;
	CommandType command = 2;
}

message TrainClassifierRequest {
	string username = 1;
	repeated CommandType command_list = 2;
}

message RecognizeCommandsRequest {
	string username = 1;
}

message UserProfileOperationRequest {
	string username = 1;
}

message ProfileDataReply {
	map<int32, int32>  profile_data = 1;
}

message ProfileListReply {
	map<string, ProfileDataReply> profile_list = 1;
}

message UpdateSensorDataRequest {
	repeated int32 sensor_data = 1;
}